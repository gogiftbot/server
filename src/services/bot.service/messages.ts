import { Language, transaction } from "@prisma/client";
import { numberToString } from "@/utils/number";
import TelegramBot from "node-telegram-bot-api";
import { config } from "@/config";

const WelcomeMessageByLanguage: Record<Language, string> = {
  [Language.EN]: `you are a legend! üéâ

üéÅ Gifts don‚Äôt wait. Open. Win. Repeat.
üéÆ GoGift ‚Äî where surprises drop daily.`,
  [Language.RU]: `—Ç—ã –ª–µ–≥–µ–Ω–¥–∞! üéâ

üéÅ –ü–æ–¥–∞—Ä–∫–∏ –Ω–µ –∂–¥—É—Ç. –û—Ç–∫—Ä—ã–≤–∞–π. –í—ã–∏–≥—Ä—ã–≤–∞–π. –ü–æ–≤—Ç–æ—Ä—è–π.
üéÆ GoGift ‚Äî –∑–¥–µ—Å—å —Å—é—Ä–ø—Ä–∏–∑—ã –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.`,
};

export const welcomeMessage = (
  name: string,
  language: Language = Language.EN,
) =>
  `üéâ ${name.replace(/([_*\[\]()~`>#+\-=|{}.!])/g, "\\$1")}, ${
    WelcomeMessageByLanguage[language]
  }`;

export const welcomeMessageOptions = (
  language: Language,
  referral?: string,
): TelegramBot.SendMessageOptions => {
  const startText = language === Language.RU ? "–ù–∞—á–∞—Ç—å" : "Start";
  const joinChannelText =
    language === Language.RU ? "–í—Å—Ç—É–ø–∏—Ç—å –≤ –∫–∞–Ω–∞–ª" : "Join Channel";
  const supportText = language === Language.RU ? "–ü–æ–¥–¥–µ—Ä–∂–∫–∞" : "Support";

  return {
    parse_mode: "Markdown",
    reply_markup: {
      inline_keyboard: [
        [
          {
            text: startText,
            url: `https://t.me/${config.bot.name}`,
          },
        ],
        [
          {
            text: joinChannelText,
            url: "https://t.me/GoGift_announcements",
          },
        ],
        [
          {
            text: supportText,
            url: "https://t.me/GoGift_Support",
          },
        ],
      ],
    },
  };
};

export const depositTransactionMessage = (language: Language) => {
  if (language === Language.RU)
    return (transaction: Pick<transaction, "amount">) =>
      `‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! ${numberToString(
        transaction.amount,
      )} TON —É—Å–ø–µ—à–Ω–æ –∑–∞—á–∏—Å–ª–µ–Ω–æ –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å.`;

  return (transaction: Pick<transaction, "amount">) =>
    `‚úÖ Transaction complete. Amount of ${numberToString(
      transaction.amount,
    )} TON has been added to your balance.`;
};

export const successTransactionMessage = (language: Language) => {
  if (language === Language.RU) {
    return (transaction: Pick<transaction, "amount" | "address">) =>
      `‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞! ${numberToString(
        transaction.amount,
      )} TON –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –≤–∞—à –∫–æ—à–µ–ª—ë–∫ (${transaction.address}).`;
  }

  return (transaction: Pick<transaction, "amount" | "address">) =>
    `‚úÖ Transaction created! Amount of ${numberToString(
      transaction.amount,
    )} TON has been send to your wallet (${transaction.address}).`;
};

export const failedTransactionMessage = (language: Language) => {
  if (language === Language.RU) {
    return (transaction: Pick<transaction, "amount">) =>
      `‚ùå –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞! ${numberToString(
        transaction.amount,
      )} TON –∑–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å.`;
  }

  return (transaction: Pick<transaction, "amount">) =>
    `‚ùå Transaction Declined! Amount of ${numberToString(
      transaction.amount,
    )} TON has been added to your balance.`;
};

export const failedGiftTransactionMessage = (language: Language) => {
  if (language === Language.RU)
    return (title?: string) =>
      `‚ö†Ô∏è –í—ã–≤–æ–¥ –ø–æ–¥–∞—Ä–∫–∞${
        title ? ` (${title})` : ""
      } –æ—Ç–∫–ª–æ–Ω–µ–Ω. –ú—ã –≤–µ—Ä–Ω—É–ª–∏ –µ–≥–æ –≤ –≤–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å–ª–æ–≤–∏—è –≤—ã–≤–æ–¥–∞.`;

  return (title?: string) =>
    `‚ö†Ô∏è Gift${
      title ? ` (${title})` : ""
    } withdraw Declined! We've returned it to your inventory. Review the withdrawal terms.`;
};

export const paySupportMessage = (language: Language) => {
  if (language === Language.RU) {
    return `‚ÑπÔ∏è –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:
–°–æ–≥–ª–∞—Å–Ω–æ –Ω–∞—à–µ–π –ø–æ–ª–∏—Ç–∏–∫–µ, –ø–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–∞ (–ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ) –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –Ω–µ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω.

–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –æ–ø–ª–∞—Ç–µ, —Å—Ç–∞—Ç—É—Å—É –∑–∞–∫–∞–∑–∞ –∏–ª–∏ —Ä–∞–±–æ—Ç–µ —Å–µ—Ä–≤–∏—Å–∞ ‚Äî –Ω–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤–∞ –ø–æ–º–æ—á—å!
üì® –ü–∏—à–∏—Ç–µ –Ω–∞–º: @GoGift_Support`;
  }

  return `‚ÑπÔ∏è Important Information:
According to our policy, refunds are not provided after the case has been opened (contents received).

If you have any questions regarding payment, order status, or the service ‚Äî our support team is always ready to help!
üì® Contact us: @GoGift_Support`;
};
